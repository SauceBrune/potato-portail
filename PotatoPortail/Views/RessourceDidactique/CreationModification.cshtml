@model PotatoPortail.ViewModels.PlanCadre.DidactiqueViewModel
@{
    ViewBag.Titre = "Ajout de ressources didactiques";
    ViewBag.ListIdRessourceDidactique = new List<int>();
    foreach (var ressourceDidactique in Model.DidactiqueSousDidactiques)
    {
        ViewBag.ListIdRessourceDidactique.Add(ressourceDidactique.sousRessourceDidactiques.Count);
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/ajoutRessource.js" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="formRessource" class="container">
        <div class="form-box ">

            <header class="light-header">
                <h1>@ViewBag.Titre</h1>
                @Html.HiddenFor(model => model.IdPlanCadre)
            </header>

            @if (Model.DidactiqueSousDidactiques.Any())
            {
                for (var indexDidactique = 0; indexDidactique < Model.DidactiqueSousDidactiques.Count; indexDidactique++)
                {
                    <div class="form-group" id="ap@(indexDidactique)">
                        @Html.TextBoxFor(m => Model.DidactiqueSousDidactiques[indexDidactique].ressourceDidactique.NomRessource, htmlAttributes: new {@class = "form-control inline"})
                        @Html.HiddenFor(m => m.DidactiqueSousDidactiques[indexDidactique].ressourceDidactique.IdRessource)
                        @Html.ValidationMessageFor(m => m.DidactiqueSousDidactiques[indexDidactique].ressourceDidactique.NomRessource, "", new {@class = "text-danger"})

                        <a class="fancy-button rouge vertical-align margin-left" id="btnMoins@(indexDidactique)" onclick="enleverAPrincipal(this.id, @indexDidactique)">
                            <span class="glyphicon glyphicon-trash"></span>
                        </a>
                        <ul id="listSP0">

                            @for (var indexSousDidactique = 0; indexSousDidactique < Model.DidactiqueSousDidactiques[indexDidactique].sousRessourceDidactiques.Count; indexSousDidactique++)
                            {
                                <li class="form-group" id="ap@(indexDidactique)li@(indexSousDidactique)">
                                    @Html.TextBoxFor(m => Model.DidactiqueSousDidactiques[indexDidactique].sousRessourceDidactiques[indexSousDidactique].NomSousRessource, htmlAttributes: new {@class = "form-control medium inline"})
                                    @Html.HiddenFor(m => m.DidactiqueSousDidactiques[indexDidactique].sousRessourceDidactiques[indexSousDidactique].IdSousRessource)
                                    @Html.ValidationMessageFor(m => m.DidactiqueSousDidactiques[indexDidactique].sousRessourceDidactiques[indexSousDidactique].NomSousRessource, "", new {@class = "text-danger"})
                                    <a class="fancy-button rouge vertical-align margin-left" id="btnMoins@(indexDidactique)_@(indexSousDidactique)" onclick="enleverSRessource(@indexDidactique, @indexSousDidactique)">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </a>
                                </li>
                            }
                            <a class="fancy-button" id="btnPlus@(indexDidactique)" onclick="ajoutSRessource(this.id, @indexDidactique)">
                                <span class="glyphicon glyphicon-plus"></span>
                                Ajouter une sous-ressource
                            </a>
                        </ul>
                    </div>
                }
            }

            <div class="form-group">
                <input id="ajoutAP" type="button" onclick="ajoutAPrincipal(this.id, 1)" value="Ajouter une ressource didactique" class="fancy-button"/>
            </div>
            <input type="submit" value="Enregistrer" class="fancy-button"/>
            <a class="fancy-button rouge" href='@Url.Action("Structure", "PlanCadre", new { Model.IdPlanCadre })'>Annuler</a>
        </div>
    </div>
    <script>
        var idRessource = @Model.DidactiqueSousDidactiques.Count;
        var listIdRessourceDidactique = new Array();
        var array = @Html.Raw(Json.Encode(@ViewBag.ListIdRessourceDidactique));
        for (var i = 0; i < array.length; i++) {
            listIdRessourceDidactique.push(array[i]);
        }

    </script>
}