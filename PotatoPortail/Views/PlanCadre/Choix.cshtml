@model PotatoPortail.ViewModels.PlanCadre.CompetenceViewModel

@Html.AntiForgeryToken()


<div id="formChoix" class="container">
    <div class="form-box">
        <div id="divCompetence">
            <h2>Compétences - @Model.PlanCadre.TitreCours</h2>
            <hr/>
            <div id="divEnonce">
                <div class="form-group">
                    @Html.LabelFor(model => model.EnonceCompetence, "Compétence", htmlAttributes: new {style = "display: inline-block; margin-right: 10px;"})
                    @Html.DropDownListFor(m => m.idEnonce, Model.EnonceCompetences, htmlAttributes: new {@class = "form-control", @name = "codeCompetence", @id = "dropEnonce", @onchange = "ajouterCompetence()"})
                    @Html.ValidationMessageFor(model => model.EnonceCompetence, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <button id="btnSubmit" type="button" class="fancy-button" UseSubmitBehavior="false">Suivant</button>
    </div>
</div>

@section Scripts {
    <script>

        $(document).ready(function() {
            initCompetence();

            $("#btnSubmit").click(function() {

                const listEnonceElementStringified = JSON.stringify(window.listEnonceElement);

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    data: {
                        httpBundle: listEnonceElementStringified,
                        _idPlanCadre: @Model.PlanCadre.IdPlanCadre
                    },
                    url: "/PlanCadre/Choix",
                    success: function(result){
                        window.location.assign(`Structure?idPlanCadre=${@Model.PlanCadre.IdPlanCadre}`);
                        location.reload(true);
                    }
                });
            });
        });
    </script>
    <script src="@Url.Content("~/Scripts/planCadreEnonceSelect.js")"></script>
    @Scripts.Render("~/bundles/jqueryval")
}